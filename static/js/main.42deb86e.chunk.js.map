{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Navbar/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","handleClick","id","alt","name","src","image","Wrapper","children","Title","Navbar1","score","topscore","App","state","friends","cardClicked","filter","friend","console","log","clicked","resetGame","newFriends","map","setState","sort","Math","random","Navbar","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"upCA6BeA,MA1Bf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,QAAS,kBACZF,EAAMG,YAAYH,EAAMI,KAExBC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEhC,yBAAKP,UAAU,WAAWD,EAAMI,M,MCLvBK,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCG1BC,MAJf,SAAeX,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMU,W,aCWvBE,MAVf,SAAiBZ,GACf,OACE,yBAAKC,UAAU,OACb,4BACG,2CAAiBD,EAAMa,OACxB,0CAAgBb,EAAMc,aCoEfC,E,2MArEbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,SAAU,G,EAGdX,YAAc,SAAAC,GAEV,IAAMc,EAAc,EAAKF,MAAMC,QAAQE,OAAO,SAAAC,GAAM,OAAIA,EAAOhB,KAAOA,IAKtE,GAJAiB,QAAQC,IAAIJ,GACZG,QAAQC,IAAIJ,EAAY,GAAGK,SAGI,SAA3BL,EAAY,GAAGK,QAEjBF,QAAQC,IAAI,kBACZ,EAAKE,gBAGF,CACHH,QAAQC,IAAI,sBACZ,IAAMG,EAAa,EAAKT,MAAMC,QAAQS,IAAI,SAAAN,GAIxC,OAHIA,EAAOhB,KAAOA,IAChBgB,EAAOG,QAAU,QAEZH,IAETC,QAAQC,IAAIG,GACZ,EAAKE,SAAS,CACZV,QAASQ,EAAWG,KAAK,kBAAMC,KAAKC,SAAW,KAC/CjB,MAAO,EAAKG,MAAMH,MAAQ,EAC1BC,SAAU,EAAKE,MAAMH,MAAQ,EAAI,EAAKG,MAAMF,SAAW,EAAKE,MAAMH,MAAQ,EAAI,EAAKG,MAAMF,a,EAKjGU,UAAY,WACR,IAAMC,EAAa,EAAKT,MAAMC,QAAQS,IAAI,SAAAN,GAExC,OADAA,EAAOG,QAAU,QACVH,IAETC,QAAQC,IAAI,QAASG,GACrB,EAAKE,SAAS,CACZV,QAASQ,EAAWG,KAAK,kBAAMC,KAAKC,SAAW,KAC/CjB,MAAO,K,wEAKH,IAAD,OACL,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,sBACA,kBAACkB,EAAD,CAASlB,MAAOmB,KAAKhB,MAAMH,MAAOC,SAAUkB,KAAKhB,MAAMF,WACtDkB,KAAKhB,MAAMC,QAAQS,IAAI,SAAAN,GAAM,OAC5B,kBAAC,EAAD,CACEjB,YAAa,EAAKA,YAClBC,GAAIgB,EAAOhB,GACX6B,IAAKb,EAAOhB,GACZE,KAAMc,EAAOd,KACbE,MAAOY,EAAOZ,MACde,QAASH,EAAOG,iB,GA/DVW,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.42deb86e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img onClick={() =>\n          props.handleClick(props.id)} \n          // className=\"remove\" \n          alt={props.name} src={props.image}/>\n      </div>\n      <div className=\"content\">{props.id}\n        {/* <ul>\n          <li>\n            <strong>ID: </strong> {props.id}\n          </li> */}\n          {/* <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li> */}\n        {/* </ul>  */}\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport \"./style.css\";\r\n\r\nfunction Navbar1(props) {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul>\r\n         <li>Your Score: {props.score}</li>\r\n        <li>Top Score: {props.topscore}</li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\nexport default Navbar1;\r\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Navbar1 from \"./components/Navbar\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topscore: 0\n  };\n\nhandleClick = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being clicked\n    const cardClicked = this.state.friends.filter(friend => friend.id === id);\n    console.log(cardClicked)\n    console.log(cardClicked[0].clicked)\n\n    // HERE: you need to look if the card was clicked before\n    if (cardClicked[0].clicked === \"true\") {\n      // if yes you need to init\n      console.log(\"clicked before\");\n      this.resetGame();\n    }\n    // if no you need to update scores and shuffle and then updete the state\n    else {\n      console.log(\"not clicked before\");\n      const newFriends = this.state.friends.map(friend => {\n        if (friend.id === id) {\n          friend.clicked = \"true\";\n        }\n        return friend;\n      });\n      console.log(newFriends);\n      this.setState({\n        friends: newFriends.sort(() => Math.random() - 0.5),\n        score: this.state.score + 1,\n        topscore: this.state.score + 1 > this.state.topscore ? this.state.score + 1 : this.state.topscore\n      });\n    }\n};\n\nresetGame = () => {\n    const newFriends = this.state.friends.map(friend => {\n      friend.clicked = \"false\";\n      return friend;\n    });\n    console.log(\"reset\", newFriends)\n    this.setState({\n      friends: newFriends.sort(() => Math.random() - 0.5),\n      score: 0\n    });\n};\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\nrender() {\n    return (\n      <Wrapper>\n        <Title>Click 2 Score</Title>\n        <Navbar1 score={this.state.score} topscore={this.state.topscore} />\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleClick={this.handleClick}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            clicked={friend.clicked}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}